#!/bin/bash

function list_vma_servers {
	cls
	vma
	if [ $VMA -eq 1 ]; then
		printf "\n${bold}${blue}vMA ESX Server List${unbold}${white}\n\n"
		/usr/bin/vifp listservers
	else
		not_vma
	fi
}

function addserver {
	cls
	vma
	if [ $VMA -eq 1 ]; then
		DONE=0
		while [ $DONE -eq 0 ]
		do
			printf "${bold}${blue}\nAddserver wizard. Options with defaults can be left blank${unbold}${white}\n\n"
			printf "${yellow}Enter server name as it appears in DNS or enter IP:${white} "
			read SERVER
			printf "${yellow}Auth policy. Sets the authentication policy to fastpass authentication\nor the Active Directory (fpauth or adauth):${white} "
			read AUTH
			printf "${yellow}Connection protocol, http or https. HTTPS by default:${white} "
			read PROTO; if [ ! $PROTO ]; then PROTO='https'; fi
			printf "${yellow}Connection port number of the target server. The default is 443:${white} "
			read PORT; if [ ! $PORT ]; then PORT='443'; fi
			printf "${yellow}Service path URL of the target server. The default is /sdk:${white} "
			read SPATH; if [ ! $SPATH ]; then SPATH='/sdk'; fi
			printf "${yellow}Username, If the target server points to an ESX/ESXi system,\n the default is root:${white} "
			read USR; if [ ! $USR ]; then USR='root'; fi
			printf "${yellow}Password. Password for username:${white} "
			stty -echo
			read PW
			stty echo
			printf "\n\n"
			printf "${yellow}Server = $SERVER\nAuth policy = $AUTH\nProtocol = $PROTO\nService path = $SPATH\nUsername = $USR\nPASSWORD WILL NOT BE SHOWN${white}\n\n"
			printf "${green}Are these vaules correct?(y/n):${white} "
			read YESNO
			if [[ $YESNO = 'y' || $YESNO = 'Y' ]]; then
				printf "${yellow}Executing....\n/usr/bin/vifp addserver $SERVER \ \n--authpolicy $AUTH \ \n--protocol $PROTO \ \n--portnumber $PORT \ \n--servicepath $SPATH \ \n--username $USR \ \n--password ********${white}\n\n"
				echo -e $bold$red
				/usr/bin/vifp addserver $SERVER --authpolicy $AUTH --protocol $PROTO --portnumber $PORT --servicepath $SPATH --username $USR --password $PW
				if [ $? -eq 0 ]; then 
					printf "${bold}${green}Command succeded${unbold}${white}\n"
				fi
				echo -e $unbold$white
			fi
			printf "${green}Add another server?(y/n):${white} "
			read YESNO
			if [[ $YESNO = 'n' || $YESNO = 'N' ]]; then
				DONE=1
			fi
		done
	else
		not_vma	
	fi
}

function remove_server {
	cls
	vma
	if [ $VMA -eq 1 ]; then
		printf "${bold}${blue}Removeserver wizard${unbold}${white}\n\n"
		printf "${yellow}Current server list${white}\n"
		LIST=( `/usr/bin/vifp listservers | awk '{print $1}'` )
		X=0;Z=1
		Y=${#LIST[@]}
		while [ $X -lt $Y ]
		do
			printf "${Z}) ${LIST[$X]}\n"
			let X=($X+1)
			let Z=($Z+1)
		done
		printf "\n${green}Which server would you like to remove?${white} "
		read ESX
		let ESX=($ESX-1)
		printf "${green}Are you sure?(y/n)${white} "
		read YESNO
		if [[ $YESNO = 'y' || $YESNO = 'Y' ]]; then
			printf "${yellow}Removing ${LIST[${ESX}]} ${white}\n"
			/usr/bin/vifp removeserver ${LIST[${ESX}]}
			if [ $? -eq 0 ]; then
				printf "${bold}${green}Command succeded${unbold}${white}\n\n"
			else
				printf "${bold}${red}Command failed${unbold}${white}"
			fi
		fi
	else
		not_vma
	fi
}


